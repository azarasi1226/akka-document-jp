# アクターライフサイクル
アクターは参照されなくなると自動的に停止されるわけではありません。
作成されたアクターはすべて明示的に破棄する必要があるということに注意してください。
停止の簡略化としては親アクターを停止すると、その親が作った小アクターたちが再帰的に停止していくことです。
また、ActorSystemが停止するとすべてのアクターが自動的に停止します。

## アクータの作成

### ActorContextの役割
* 小アクターの生成と監視
* 他の子アクターを監視し、監視していたアクターが永久に停止した場合にTerminatedイベントを受信する。
* ログの記録
* メッセージアダプターの作成
* 全く繋がりがないようなアクターとのAskリクエスト
* `getSelf()`により自分自身の`ActorRef`へのアクセス